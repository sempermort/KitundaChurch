@model KitundaChurch.Models.Event

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("CreateAsync", "Events", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       <div class="form-group">
        <div class="col-md-2"></div>
         <div class="col-md-10">

               <img src="" Class="imgDisplay img-responsive  img-thumbnail"  style="position:relative; background-color:lightgray;margin-bottom:15px;width:350px; height:250px; "/>
           
          
          <input type="file" name="Upload" id="Upload"  onchange="ShowPreview(this)" class="btn btn-default btn-file" >
           
           </div></div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
    @Html.LabelFor(model => model.timer, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.timer, new { htmlAttributes = new { @class = "form-control glyphicon glyphicon-calendar" } })
        @Html.ValidationMessageFor(model => model.timer, "", new { @class = "text-danger" })
    </div>
</div>
        <div class="form-group">
            @Html.LabelFor(model => model.place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.place, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contentual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contentual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contentual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
        
@section Scripts {
   

<script type="text/javascript">
               function ShowPreview(input) {
                   if (input.files && input.files[0]) {
                       var ImageDir = new FileReader();
                       ImageDir.onload = function (e) {
                           $('.imgDisplay').attr('src', e.target.result);
                       }
                     ImageDir.readAsDataURL(input.files[0]);
                   }
               }
              

               
             
    $(function () { // will trigger when the document is ready
        $('.datepicker').datetimepicker(

            ); //Initialise any date pickers
    });

</script>
}
